from flask import render_template, flash, redirect, session, url_for, request, g
from flask.ext.login import login_user, logout_user, current_user, login_required
from app import app, db, lm, models
from forms import LoginForm, SignUpForm, Tweet
from models import User, Post
import random, datetime


@app.before_request
def before_request():
    g.user = current_user


@app.route('/')
@app.route('/index')
@app.route('/feed')
def index():
    user = g.user
    if g.user is None:
        flash("Only for authorised users!")
        return redirect(url_for('login'))
    form_tw = Tweet()
    if form_tw.validate_on_submit() and (form_tw.text.data is not None):
        p = Post(user_id=user.id, text=form_tw.text.data, post_date=datetime.datetime.utcnow(), design=random.randint(1,4))
        db.session.add(p)
        db.session.commit()

    return render_template('feed.html', 
        user = user)


@lm.user_loader
def load_user(id):
    return models.User.query.filter_by(id=id).first()



@app.route('/me')
def me():
    return user(g.user.nickname)



@app.route('/login', methods =  ['GET', 'POST'])
def login():

    if g.user is not None and g.user.is_authenticated():
        return redirect(url_for('index'))
    form_l = LoginForm()
    form_s = SignUpForm()

    if form_l.validate_on_submit():
        session['remember_me'] = form_l.remember_me.data
        user = db.session.query(User).filter(User.email == form_l.openid.data).filter(User.password == form_l.password.data).first()
        if user is not None:
            login_user(user, remember = form_l.remember_me.data)
            return redirect(url_for('index')) 
        else: 
            print("NOT FOUND")
        
    if form_s.validate_on_submit():
        k = False
        user = db.session.query(User).filter(User.email == form_s.email.data  or  User.nickname == form_s.login.data).first()
        if user is None:
            u = User(nickname=form_s.login.data, email=form_s.email.data, password=form_s.password.data)
            db.session.add(u)
            db.session.commit()
            login_user(u)
            return redirect(url_for('index')) 
        else:
            print("EXISTS")
             
    return render_template('login1.html',
        form_l = form_l,
        form_s = form_s)


@app.route('/user', methods =  ['GET', 'POST'])
@app.route('/user/<login>', methods =  ['GET', 'POST'])
@login_required
def user(login):
    user = User.query.filter_by(nickname=login).first()
    if user == None:
        flash('User not found')
        return redirect(url_for('index'))
    posts = [
        {
             'author': { 'nickname': 'Sherlock'},
             'text': 'If inconvenient, come anyway.'
        },
        {
             'author': { 'nickname': 'Moriarty'},
             'text': 'I will BURN the heart out of you.'
        }
    ]
    return render_template("index.html",
        user = user,
        posts = posts)

@app.route('/logout')
def logout():
    logout_user()
    print ("successfully logged out")
    return redirect(url_for('login'))


#            nickname = email.split('@')[0]
